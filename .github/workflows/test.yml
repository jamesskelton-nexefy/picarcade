name: CI Pipeline - Real API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18.17.0'
  PYTHON_VERSION: '3.11'

jobs:
  # Shared Package Tests
  test-shared:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build shared package
        run: npm run build --workspace=packages/shared
      
      - name: Test shared package
        run: npm run test --workspace=packages/shared

  # API Backend Tests
  test-api:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: picarcade_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install API dependencies
        working-directory: packages/api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Run API tests with real APIs
        working-directory: packages/api
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/picarcade_test
          REDIS_URL: redis://localhost:6379
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
        run: python -m pytest tests/ -v

  # Agentic Package Tests
  test-agentic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install agentic dependencies
        working-directory: packages/agentic
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run agentic tests with real AI APIs
        working-directory: packages/agentic
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          BING_API_KEY: ${{ secrets.BING_API_KEY }}
          FLUX_API_KEY: ${{ secrets.FLUX_API_KEY }}
        run: python -m pytest tests/ -v

  # Web App Tests
  test-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build shared package
        run: npm run build --workspace=packages/shared
      
      - name: Lint web app
        run: npm run lint --workspace=apps/web
      
      - name: Type check web app
        run: npm run type-check --workspace=apps/web
      
      - name: Build web app
        run: npm run build --workspace=apps/web

  # Mobile App Tests
  test-mobile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint mobile app
        run: npm run lint --workspace=apps/mobile
      
      - name: Type check mobile app
        run: npm run type-check --workspace=apps/mobile

  # Integration Tests with Real APIs
  test-integration:
    runs-on: ubuntu-latest
    needs: [test-shared, test-api, test-agentic, test-web]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install all dependencies
        run: npm ci
      
      - name: Run integration tests with real APIs
        working-directory: packages/tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
          BING_API_KEY: ${{ secrets.BING_API_KEY }}
          API_BASE_URL: http://localhost:8000
        run: |
          npm run test:integration
          npm run test:api 